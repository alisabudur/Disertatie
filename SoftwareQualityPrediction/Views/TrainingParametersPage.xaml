<Page x:Class="SoftwareQualityPrediction.Views.TrainingParametersPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SoftwareQualityPrediction.Views"
      xmlns:viewModels="clr-namespace:SoftwareQualityPrediction.ViewModels"
      xmlns:resx="clr-namespace:SoftwareQualityPrediction.Properties"
      xmlns:utils="clr-namespace:SoftwareQualityPrediction.Utils"
      xmlns:models="clr-namespace:SoftwareQualityPrediction.Models"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1200"
      Title="{x:Static resx:Resources.TrainingParametersCaption}">
    
    <Page.DataContext>
        <viewModels:TrainingParametersViewModel/>
    </Page.DataContext>
    
    <Page.Resources>
        <utils:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <GroupBox Header="{x:Static resx:Resources.SelectAnnParametersCaption}"
                      Grid.Column="0"
                      Margin="20">

                <Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Header="{x:Static resx:Resources.ActivationFunctionCaption}">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6*"/>
                                <RowDefinition Height="6*"/>
                            </Grid.RowDefinitions>

                            <RadioButton Grid.Row="0"
                                         Content="{x:Static resx:Resources.SigmoidCaption}"
                                         VerticalAlignment="Center"
                                         IsChecked="{Binding SelectedActivationFunction, 
                                         Converter={StaticResource EnumToBoolConverter}, 
                                         ConverterParameter={x:Static models:ActivationFunction.Sigmoid}}"/>

                            <RadioButton Grid.Row="1"
                                         Content="{x:Static resx:Resources.BipolarSigmoidCaption}"
                                         VerticalAlignment="Center"
                                         IsChecked="{Binding SelectedActivationFunction, 
                                         Converter={StaticResource EnumToBoolConverter}, 
                                         ConverterParameter={x:Static models:ActivationFunction.BipolarSigmoid}}"/>  
                        </Grid>
                    </GroupBox>

                    <Label Content="{x:Static resx:Resources.LearningRateCaption}" 
                           Grid.Row="1" 
                           Margin="5"/>

                    <TextBox Text="{Binding LearningRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Height="25"
                             Margin="5"
                             Grid.Row="2"/>
                </Grid>
            </GroupBox>

            <GroupBox Header="{x:Static resx:Resources.SelectTerminationConditionCaption}"
                      Grid.Column="1"
                      Margin="20">

                <Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Content="{x:Static resx:Resources.MinimumErrorCaption}" 
                           Margin="5"
                           Grid.Column="0"
                           Grid.Row="0" />

                    <TextBox Text="{Binding MinError, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Margin="5"
                             Height="25"
                             Grid.Column="0"
                             Grid.Row="1"/>

                    <Label Content="{x:Static resx:Resources.NumberOfEpochsCaption}" 
                           Margin="5"
                           Grid.Row="2" />

                    <TextBox Text="{Binding NoEpochs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Margin="5"
                             Height="25"
                             Grid.Row="3"/>
                </Grid>
            </GroupBox>

            <GroupBox Header="{x:Static resx:Resources.SelectHiddenLayersCaption}"
                      Grid.Column="2"
                      Margin="20">

                <Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Content="{x:Static resx:Resources.HiddenLayersCaption}" 
                           Margin="5"
                           Grid.Row="0"/>

                    <TextBox Text="{Binding HiddenLayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Margin="5"
                             Height="25"
                             Grid.Row="1"/>

                    <TextBlock Text="{x:Static resx:Resources.HiddenLayersDescription}"
                               TextWrapping="WrapWithOverflow"
                               TextAlignment="Justify"
                               FontStyle="Italic"
                               Foreground="Gray"
                               Margin="5"
                               Grid.Row="2"/>
                </Grid>
            </GroupBox>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <GroupBox Header="{x:Static resx:Resources.SaveSettingsCaption}"
                      Grid.Column="0"
                      Margin="20">

                <Grid Margin="20, 15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="{x:Static resx:Resources.NeuralNetworkNameCaption}" 
                           Margin="5"
                           Grid.Row="0"
                           Grid.Column="0"/>

                    <TextBox Text="{Binding NeuralNetworkName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Margin="5"
                             Height="25"
                             Grid.Row="1"
                             Grid.Column="0"/>

                    <Label Content="{x:Static resx:Resources.LocationToSaveCaption}" 
                           Margin="5"
                           Grid.Row="0"
                           Grid.Column="1"/>

                    <TextBox Text="{Binding NeuralNetworkSavePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Margin="5"
                             Height="25"
                             Grid.Row="1"
                             Grid.Column="1"/>
                    
                    <Button Content="{x:Static resx:Resources.BrowseCaption}"
                            Command="{Binding SelectNeuralNetworkSavePathCommand}"
                            Grid.Row="1"
                            Grid.Column="2"
                            Height="25"
                            Margin="5"/>
                </Grid>

            </GroupBox>
        </Grid>

        <Button Content="{x:Static resx:Resources.StartTrainingCaption}" 
                Command="{Binding StartTrainingCommand}"
                IsEnabled="{Binding StartTrainingCanExecute}"
                Margin="5"
                Height="25"
                Width="120"
                Grid.Row="2"/>

        <Grid Grid.Row="4" 
              Margin="20">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <ProgressBar Value="{Binding ProgressBarValue}"
                         Minimum="0"
                         Maximum="100"
                         Height="25"
                         Grid.Column="0"/>

            <Label Content="{x:Static resx:Resources.TrainingCompletedMessage}" 
                   Visibility="{Binding TrainingCompletedMessageVisibility}"
                   HorizontalAlignment="Center"
                   Margin="20, 0"
                   Grid.Column="1"/>

            <Label Content="{Binding Error}" 
                   Foreground="Red"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Grid.Column="2"/>

            <Button Content="{x:Static resx:Resources.GoToTestingCaption}"
                    Click="NavigateToNextPage"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Height="25"
                    Width="120"
                    Grid.Column="3"/>
        </Grid>

    </Grid>
</Page>
